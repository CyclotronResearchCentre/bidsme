# ------------------------------------------------------------------------------
# BIDScoiner maps the data in your [raw] data folder to a [sourcedata] BIDS data
# folder. The key-value mapping is based (in opposite order) on:
#
# 1) Information in the MRI header files (DICOM, PAR/REC or .7 format)
# 2) Information from nifti headers (e.g. image dimensionality)
# 3) Information in the file structure (file- and/or directory names)
#
# So, key-value mapping from the file structure takes precedence over key-value
# mapping from the nifti headers, which takes precedence over key-value mapping
# from the MRI headers. The complete set of <keys> of the key-value mapping can
# be seen in the BIDS template below. The associated values are extracted from
# each as specified in the corresponding key-value logic YAML entries below.
#
# This file is automatically generated from [bidsmapper.py]. Adapt the key-value
# YAML entries below to your needs before running [bidscoiner.py].
# ------------------------------------------------------------------------------


# --- Raw data template (this is how your inpute data structure is expected to be)
# 
# [raw]/<participant_label>/[<session_label>/]
# 	[<acq_label>/]
# 		[<acq_label>|*].[IMA|dcm]
# 	[<events_label>/]
# 		[<events_label>|*].[log|txt|csv|tsv]


# --- BIDS 1.0.2 template (this is how your BIDS output data structure will be)
# 
# participants.tsv
# participants.json
# phenotype/<measurement_tool_name>.tsv
# phenotype/<measurement_tool_name>.json
# dataset_description.json
# README
# CHANGES
# [code/]
# [derivatives/]README
# [stimuli/]
# [sourcedata/]sub-<participant_label>/[sub-<participant_label>_sessions.tsv]
# [sourcedata/]sub-<participant_label>/[ses-<session_label>/]
# 	sub-<participant_label>_scans.tsv
# 	anat/
# 		sub-<participant_label>[_ses-<session_label>][_acq-<acq_label>][_ce-<ce_label>][_rec-<rec_label>][_run-<run_index>][_mod-<mod_label>]_<modality_label>.nii[.gz]
# 	func/
# 		sub-<participant_label>[_ses-<session_label>]_task-<task_label>[_acq-<label>][_rec-<label>][_run-<index>][_echo-<index>]_bold.nii[.gz]
# 		<matches>_events.tsv
# 		<matches>[_recording-<recording_label>]_physio.tsv.gz
# 		<matches>[_recording-<recording_label>]_physio.json
# 		<matches>[_recording-<recording_label>]_stim.tsv.gz
# 		<matches>[_recording-<recording_label>]_stim.json
# 	beh/
# 		sub-<participant_label>[_ses-<session_label>]_task-<task_name>_events.tsv
# 		<matches>_beh.json
# 		<matches>_physio.tsv.gz
# 		<matches>_physio.json
# 		<matches>_stim.tsv.gz
# 		<matches>_stim.json
# 	dwi/
# 		sub-<participant_label>[_ses-<session_label>][_acq-<acq_label>][_run-<run_index>]_dwi.nii[.gz]
# 		<matches>_dwi.bval
# 		<matches>_dwi.bvec
# 		<matches>_dwi.json
# 	fmap/
# 		sub-<participant_label>[_ses-<session_label>][_acq-<label>][_run-<run_index>]_phasediff.nii[.gz]
# 		<matches>_magnitude1.nii[.gz]
# 		<matches>_magnitude2.nii[.gz]
# 		<matches>_phasediff.nii[.gz]
# 		<matches>_phasediff.json
# 		<matches>_phase1.nii[.gz]
# 		<matches>_phase1.json
# 		<matches>_phase2.nii[.gz]
# 		<matches>_phase2.json
# 		<matches>_magnitude.nii[.gz]
# 		<matches>_fieldmap.nii[.gz]
# 		<matches>_fieldmap.json
# 		sub-<participant_label>[_ses-<session_label>][_acq-<label>]_dir-<dir_label>[_run-<run_index>]_epi.nii[.gz]
# 		<matches>.json
---


# ------------------------------------------------------------------------------
# DICOM key-value logic (DICOM fields that are mapped to the BIDS labels)
# Special substitutions can be performed using python's Format
# Specification Mini-Language), <> denote subsitution by DICOM field
# ------------------------------------------------------------------------------
DICOM:
  participant_label: ~
  session_label: ~
  anat:
    - modality:
        - SeriesDescription: MPRAGE
          SeqName: tfl
      acq_label: MPRAGE
      rec_label: ~
      run_index: ~
      mod_label: ~
      modality_label: T1w
      ce_label: ~
    - modality:
        - SeriesDescription: MP2RAGE optimal contrast
          SeqName: tfl
      acq_label: MP2RAGE
      rec_label: ~
      run_index: ~
      mod_label: ~
      modality_label: T1w
      ce_label: ~
  func:
    - modality:
        - SeriesDescription: fmri_STOP
          SeqName: epi2d
      task_label: stop
      acq_label: ~
      rec_label: ~
      run_index: ~
      echo_index: ~
    - modality:
        - SeriesDescription: [fMRI_Reward_01, fmri_rewardtask_01]
          SeqName: epi2d
      task_label: reward
      acq_label: ~
      rec_label: ~
      run_index: 01
      echo_index: ~
    - modality:
        - SeriesDescription: [fMRI_Reward_02, fmri_rewardtask_02]
          SeqName: epi2d
      task_label: reward
      acq_label: ~
      rec_label: ~
      run_index: 02
      echo_index: ~
  beh: ~
  dwi:
    - modality:
        - SeriesDescription: [dti, dsi]
          SeqName: epi2ddiff
      acq_label: <SeriesDescription>
      run_index: ~
  fmap:
    - modality:
        - SeriesDescription: dti
          SeqName: epi2d
      acq_label: <SeriesDescription>
      run_index: ~
      dir_label: ~
  seriesnr_seriesdescription:
    - modality:
        - SeriesDescription: SWI
          SeqName: tfl
      acq_label: <SeriesNumber>_<SeriesDescription>
    - modality:
        - SeriesDescription: ASL*
          SeqName: ~
      acq_label: ASl
  
  
# ------------------------------------------------------------------------------
# PAR key-value logic (Philips PAR fields that are mapped to the BIDS labels)
# ------------------------------------------------------------------------------
PAR: ~


# ------------------------------------------------------------------------------
# P*.7 key-value logic (GE fields that are mapped to the BIDS labels)
# -------------------------------------------------------------------------------
P7: ~

  
# ------------------------------------------------------------------------------
# Nifti key-value logic (Nifti fields that are mapped to the BIDS labels)
# ------------------------------------------------------------------------------
Nifti: ~


# ------------------------------------------------------------------------------
# File system key-value logic (these file- and foldernames will be mapped to the
# BIDS labels; Special substitutions can be performed using python's Format
# Specification Mini-Language)
# ------------------------------------------------------------------------------
FileSystem:
  participant_label: ^sub-{.*}
  session_label: ^ses-{.*}
